{"version":3,"sources":["pages/RandomCats/RandomCatStore.ts","common/components/MainTemplate/Drawer.tsx","router/path.ts","common/components/MainTemplate/index.tsx","common/components/MainTemplate/useDrawer.tsx","common/components/PageTitle/index.tsx","services/api.ts","config/index.ts","pages/RandomCats/models/RandomCat.ts","services/paths.ts","common/store/index.ts","pages/RandomCats/index.tsx","common/hooks/useStore.ts","router/index.tsx","App.tsx","reportWebVitals.ts","theme/muiTheme.ts","index.tsx"],"names":["MIME_TYPES","Drawer","path","openDrawer","isOpen","closeDrawer","navigate","useNavigate","SwipeableDrawer","anchor","open","onClose","onOpen","PaperProps","sx","width","List","ListItemButton","onClick","Typography","variant","MainTemplate","children","useState","userMenuAnchorEl","setUserMenuAnchorEl","useAuth0","logout","user","setIsOpen","useDrawer","Grid","container","direction","AppBar","position","Toolbar","IconButton","size","edge","mr","component","flexGrow","event","currentTarget","picture","Avatar","src","AccountCircle","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","disabled","name","Container","PageTitle","mt","mb","justifyContent","headers","process","http","baseUrl","tokenName","instance","this","initHttp","axios","create","baseURL","interceptors","response","use","error","handleError","config","request","url","get","data","post","put","delete","Promise","reject","RandomCat","types","model","id","string","number","height","RandomCatStore","currentCat","maybeNull","actions","self","getRandomCat","flow","type","params","mime_types","res","console","log","store","randomCatStore","StoreContext","React","createContext","RandomCatsPage","observer","useContext","getCat","useCallback","ANIMATED","useEffect","alignItems","Card","borderRadius","CardMedia","alt","objectFit","CardActions","pt","pb","Button","color","Router","element","App","loginWithRedirect","isAuthenticated","isLoading","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","muiTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","domain","clientId","redirectUri","window","location","origin","Provider","value","ThemeProvider","theme","CssBaseline","enableColorScheme","document","getElementById"],"mappings":"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","file":"static/js/main.b519acde.chunk.js","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nimport { http } from \"services/api\";\nimport { GET_RANDOM_CAT } from \"services/paths\";\nimport { RandomCat } from \"./models/RandomCat\";\n\nexport enum MIME_TYPES {\n  ANIMATED = \"gif\",\n  STATIC = \"jpg,png\",\n  ALL = \"jpg,png,gif\",\n}\n\nexport const RandomCatStore = types\n  .model(\"RandomCatStore\", {\n    currentCat: types.maybeNull(RandomCat),\n  })\n  .actions((self) => ({\n    getRandomCat: flow(function* (type: MIME_TYPES) {\n      try {\n        const res = yield http.get(GET_RANDOM_CAT, {\n          params: {\n            mime_types: type,\n          },\n        });\n        self.currentCat = res.data[0];\n      } catch (error) {\n        console.log(error);\n      }\n    }),\n  }));\n","import React from \"react\";\nimport {\n  SwipeableDrawer,\n  List,\n  ListItemButton,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { RANDOM_CATS } from \"router/path\";\n\ninterface IDrawerProps {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n  isOpen: boolean;\n}\nconst DRAWER_WIDTH = 200\n\nexport const Drawer: React.FC<IDrawerProps> = ({\n  openDrawer,\n  isOpen,\n  closeDrawer,\n}) => {\n  const navigate = useNavigate();\n\n  const goToPage = (path: string) => () => {\n    navigate(path);\n    closeDrawer();\n  };\n\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      open={isOpen}\n      onClose={closeDrawer}\n      onOpen={openDrawer}\n      PaperProps={{ sx: { width: DRAWER_WIDTH } }}\n    >\n      <List>\n        <ListItemButton onClick={goToPage(RANDOM_CATS)}>\n          <Typography variant=\"button\">RANDOM CAT</Typography>\n        </ListItemButton>\n      </List>\n    </SwipeableDrawer>\n  );\n};\n","export const RANDOM_CATS = '/'\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n  Container,\n  Avatar,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\nimport { Menu as MenuIcon, AccountCircle } from \"@mui/icons-material\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { IUser } from \"common/Interfaces/User\";\nimport { useDrawer } from \"./useDrawer\";\nimport { Drawer } from \"./Drawer\";\n\ninterface IMainTemplateProps {\n  children: React.ReactElement;\n}\n\nexport const MainTemplate: React.FC<IMainTemplateProps> = ({ children }) => {\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState<null | HTMLElement>(\n    null\n  );\n  const { logout, user } = useAuth0<IUser>();\n  const { isOpen, openDrawer, closeDrawer } = useDrawer();\n\n  const openUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setUserMenuAnchorEl(event.currentTarget);\n  };\n  const closeUserMenu = () => {\n    setUserMenuAnchorEl(null);\n  };\n\n  return (\n    <Grid container direction={\"column\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            sx={{ mr: 2 }}\n            onClick={openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"body2\" component=\"span\" sx={{ flexGrow: 1 }}>\n            CATS ARE HAPPINESS\n          </Typography>\n          <IconButton onClick={openUserMenu}>\n            {user?.picture ? (\n              <Avatar src={user.picture} />\n            ) : (\n              <Avatar>\n                <AccountCircle />\n              </Avatar>\n            )}\n          </IconButton>\n          <Menu\n            anchorEl={userMenuAnchorEl}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            open={Boolean(userMenuAnchorEl)}\n            onClose={closeUserMenu}\n          >\n            <MenuItem disabled>{user?.name || \"User\"}</MenuItem>\n            <MenuItem onClick={() => logout()}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        isOpen={isOpen}\n        closeDrawer={closeDrawer}\n        openDrawer={openDrawer}\n      />\n      <Container>\n        <main>{children}</main>\n      </Container>\n    </Grid>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useDrawer = (): {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n  isOpen: boolean;\n} => {\n  const [isOpen, setIsOpen] = useState(false);\n  const openDrawer = () => {\n    setIsOpen(true);\n  };\n  const closeDrawer = () => {\n    setIsOpen(false);\n  };\n\n  return { openDrawer, closeDrawer, isOpen };\n};\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\ninterface ITitleProps {\n  children: string;\n}\n\nexport const PageTitle: React.FC<ITitleProps> = ({ children }) => {\n  return (\n    <Grid sx={{ mt: 2, mb: 2 }} container justifyContent=\"center\">\n      <Typography variant=\"h4\">{children}</Typography>\n    </Grid>\n  );\n};\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosRequestHeaders,\n  AxiosResponse,\n} from \"axios\";\nimport { CATS_API_KEY } from \"../config\";\n\nconst headers: AxiosRequestHeaders = {\n  \"x-api-key\": CATS_API_KEY,\n};\nconst baseURL = \"https://api.thecatapi.com/v1\";\n\nclass Http {\n  private instance: AxiosInstance | null = null;\n  private headers: AxiosRequestHeaders;\n  private baseUrl: string;\n  private tokenName: string | undefined;\n\n  private get http(): AxiosInstance {\n    return this.instance != null ? this.instance : this.initHttp();\n  }\n\n  constructor(\n    headers: AxiosRequestHeaders,\n    baseUrl: string,\n    tokenName?: string\n  ) {\n    this.headers = headers;\n    this.baseUrl = baseUrl;\n    this.tokenName = tokenName;\n  }\n\n  initHttp() {\n    const http = axios.create({\n      baseURL: this.baseUrl,\n      headers: this.headers,\n    });\n\n    http.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        const { response } = error;\n        return this.handleError(response);\n      }\n    );\n\n    this.instance = http;\n    return http;\n  }\n\n  request<T = any, R = AxiosResponse<T>>(\n    config: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.request(config);\n  }\n\n  get<T = any, R = AxiosResponse<T>>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.get<T, R>(url, config);\n  }\n\n  post<T = any, R = AxiosResponse<T>>(\n    url: string,\n    data?: T,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.post<T, R>(url, data, config);\n  }\n\n  put<T = any, R = AxiosResponse<T>>(\n    url: string,\n    data?: T,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.put<T, R>(url, data, config);\n  }\n\n  delete<T = any, R = AxiosResponse<T>>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.delete<T, R>(url, config);\n  }\n\n  private handleError(error: AxiosError) {\n    return Promise.reject(error);\n  }\n}\n\nexport const http = new Http(headers, baseURL);\n","export const AUTH0_DOMAIN = process.env.REACT_APP_AUTH0_DOMAIN || 'invalid_domain'\nexport const AUTH0_CLIENT_ID = process.env.REACT_APP_AUTH0_CLIENT_ID || 'invalid_id'\nexport const CATS_API_KEY = process.env.REACT_APP_CATS_API_KEY || 'invalid_api_key'","import { types } from \"mobx-state-tree\";\n\nexport const RandomCat = types.model(\"RandomCat\", {\n  id: types.string,\n  url: types.string,\n  width: types.number,\n  height: types.number,\n});\n","export const GET_RANDOM_CAT = \"/images/search\";\n","import React from \"react\";\nimport { types, Instance } from \"mobx-state-tree\";\n\nimport { RandomCatStore } from \"pages/RandomCats/RandomCatStore\";\nconst store = types\n  .model({\n    randomCatStore: RandomCatStore,\n  })\n  .create({\n    randomCatStore: {},\n  });\nexport default store;\n\nexport const StoreContext = React.createContext({} as Instance<typeof store>);\n","import React, { useCallback, useEffect } from \"react\";\nimport { Button, Grid, Card, CardMedia, CardActions } from \"@mui/material\";\nimport { observer } from \"mobx-react\";\n\nimport { PageTitle } from \"common/components/PageTitle\";\nimport { useStore } from \"common/hooks/useStore\";\nimport { MIME_TYPES } from \"./RandomCatStore\";\n\nexport const RandomCatsPage: React.FC = observer(() => {\n  const { randomCatStore } = useStore();\n  const getCat = useCallback(() => {\n    randomCatStore.getRandomCat(MIME_TYPES.ANIMATED);\n  }, [randomCatStore]);\n  useEffect(() => {\n    getCat();\n  }, [getCat]);\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" sx={{height: \"100%\"}}>\n      <PageTitle>Random cat</PageTitle>\n      {randomCatStore.currentCat && (\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Card sx={{ borderRadius: 4 }}>\n            <CardMedia\n              component=\"img\"\n              height={350}\n              alt=\"random card\"\n              src={randomCatStore.currentCat.url}\n              sx={{ objectFit: \"contain\" }}\n            />\n            <CardActions sx={{ pt: 2, pb: 2 }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={getCat}>\n                ONE MORE CAT\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n});\n","import { useContext } from \"react\";\nimport { StoreContext } from \"common/store\";\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n","import { MainTemplate } from \"common/components/MainTemplate\";\nimport { RandomCatsPage } from \"pages/RandomCats\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { RANDOM_CATS } from \"router/path\";\n\nexport const Router: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <MainTemplate>\n        <Routes>\n          <Route path={RANDOM_CATS} element={<RandomCatsPage />} />\n          <Route path=\"*\" element={<p>There's nothing here!</p>} />\n        </Routes>\n      </MainTemplate>\n    </BrowserRouter>\n  );\n};\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Router } from \"router\";\n\nfunction App() {\n  const { loginWithRedirect, isAuthenticated, isLoading } = useAuth0();\n\n  useEffect(() => {\n    if (isLoading) return;\n    if (!isAuthenticated) {\n      loginWithRedirect();\n    }\n  }, [isAuthenticated, isLoading, loginWithRedirect]);\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <div>loading...</div> : isAuthenticated && <Router />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@mui/material/styles\";\n\nexport const muiTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AUTH0_CLIENT_ID, AUTH0_DOMAIN } from \"config\";\nimport store, { StoreContext } from \"common/store\";\nimport { muiTheme } from \"theme/muiTheme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={AUTH0_DOMAIN}\n      clientId={AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n      <StoreContext.Provider value={store}>\n        <ThemeProvider theme={muiTheme}>\n          <CssBaseline enableColorScheme />\n          <App />\n        </ThemeProvider>\n      </StoreContext.Provider>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}