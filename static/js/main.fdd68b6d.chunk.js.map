{"version":3,"sources":["pages/RandomCats/RandomCatStore.ts","common/components/MainTemplate/Drawer.tsx","router/path.ts","common/components/MainTemplate/index.tsx","common/components/MainTemplate/useDrawer.tsx","common/components/PageTitle/index.tsx","services/api.ts","config/index.ts","pages/RandomCats/models/RandomCat.ts","services/paths.ts","common/store/index.ts","common/components/ButtonWithProgress/index.tsx","pages/RandomCats/index.tsx","common/hooks/useStore.ts","router/index.tsx","App.tsx","theme/muiTheme.ts","index.tsx"],"names":["MIME_TYPES","Drawer","path","openDrawer","isOpen","closeDrawer","navigate","useNavigate","SwipeableDrawer","anchor","open","onClose","onOpen","PaperProps","sx","width","List","ListItemButton","onClick","Typography","variant","MainTemplate","children","useState","userMenuAnchorEl","setUserMenuAnchorEl","useAuth0","logout","user","setIsOpen","useDrawer","Grid","container","direction","AppBar","position","Toolbar","IconButton","size","edge","mr","component","flexGrow","event","currentTarget","picture","Avatar","src","AccountCircle","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","disabled","name","Container","PageTitle","mt","mb","justifyContent","headers","process","http","baseUrl","instance","this","initHttp","axios","create","baseURL","interceptors","response","use","error","handleError","config","request","url","get","data","post","put","delete","Promise","reject","RandomCat","types","model","id","string","number","height","RandomCatStore","currentCat","maybeNull","actions","self","getRandomCat","flow","type","params","mime_types","res","console","log","store","randomCatStore","StoreContext","React","createContext","ButtonWithProgress","loading","props","Button","Box","alignItems","display","CircularProgress","color","thickness","opacity","RandomCatsPage","observer","setLoading","ALL","mimeTabValue","setMimeTabValue","useContext","getCat","useCallback","a","useEffect","Tabs","pb","onChange","e","newValue","value","Tab","label","STATIC","ANIMATED","Card","borderRadius","CardMedia","alt","objectFit","onLoad","CardActions","pt","Router","element","App","loginWithRedirect","isAuthenticated","isLoading","className","muiTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","domain","clientId","redirectUri","window","location","origin","Provider","ThemeProvider","theme","CssBaseline","enableColorScheme","document","getElementById"],"mappings":"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","file":"static/js/main.fdd68b6d.chunk.js","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nimport { http } from \"services/api\";\nimport { GET_RANDOM_CAT } from \"services/paths\";\nimport { RandomCat } from \"./models/RandomCat\";\n\nexport enum MIME_TYPES {\n  ANIMATED = \"gif\",\n  STATIC = \"jpg,png\",\n  ALL = \"jpg,png,gif\",\n}\n\nexport const RandomCatStore = types\n  .model(\"RandomCatStore\", {\n    currentCat: types.maybeNull(RandomCat),\n  })\n  .actions((self) => ({\n    getRandomCat: flow(function* (type: MIME_TYPES) {\n      try {\n        const res = yield http.get(GET_RANDOM_CAT, {\n          params: {\n            mime_types: type,\n          },\n        });\n        self.currentCat = res.data[0];\n      } catch (error) {\n        console.log(error);\n      }\n    }),\n  }));\n","import React from \"react\";\nimport {\n  SwipeableDrawer,\n  List,\n  ListItemButton,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { RANDOM_CATS } from \"router/path\";\n\ninterface IDrawerProps {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n  isOpen: boolean;\n}\nconst DRAWER_WIDTH = 200\n\nexport const Drawer: React.FC<IDrawerProps> = ({\n  openDrawer,\n  isOpen,\n  closeDrawer,\n}) => {\n  const navigate = useNavigate();\n\n  const goToPage = (path: string) => () => {\n    navigate(path);\n    closeDrawer();\n  };\n\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      open={isOpen}\n      onClose={closeDrawer}\n      onOpen={openDrawer}\n      PaperProps={{ sx: { width: DRAWER_WIDTH } }}\n    >\n      <List>\n        <ListItemButton onClick={goToPage(RANDOM_CATS)}>\n          <Typography variant=\"button\">RANDOM CAT</Typography>\n        </ListItemButton>\n      </List>\n    </SwipeableDrawer>\n  );\n};\n","export const RANDOM_CATS = '/'\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n  Container,\n  Avatar,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\nimport { Menu as MenuIcon, AccountCircle } from \"@mui/icons-material\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { IUser } from \"common/Interfaces/User\";\nimport { useDrawer } from \"./useDrawer\";\nimport { Drawer } from \"./Drawer\";\n\ninterface IMainTemplateProps {\n  children: React.ReactElement;\n}\n\nexport const MainTemplate: React.FC<IMainTemplateProps> = ({ children }) => {\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState<null | HTMLElement>(\n    null\n  );\n  const { logout, user } = useAuth0<IUser>();\n  const { isOpen, openDrawer, closeDrawer } = useDrawer();\n\n  const openUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setUserMenuAnchorEl(event.currentTarget);\n  };\n  const closeUserMenu = () => {\n    setUserMenuAnchorEl(null);\n  };\n\n  return (\n    <Grid container direction={\"column\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            sx={{ mr: 2 }}\n            onClick={openDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"body2\" component=\"span\" sx={{ flexGrow: 1 }}>\n            CATS ARE HAPPINESS\n          </Typography>\n          <IconButton onClick={openUserMenu}>\n            {user?.picture ? (\n              <Avatar src={user.picture} />\n            ) : (\n              <Avatar>\n                <AccountCircle />\n              </Avatar>\n            )}\n          </IconButton>\n          <Menu\n            anchorEl={userMenuAnchorEl}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            open={Boolean(userMenuAnchorEl)}\n            onClose={closeUserMenu}\n          >\n            <MenuItem disabled>{user?.name || \"User\"}</MenuItem>\n            <MenuItem onClick={() => logout()}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        isOpen={isOpen}\n        closeDrawer={closeDrawer}\n        openDrawer={openDrawer}\n      />\n      <Container>\n        <main>{children}</main>\n      </Container>\n    </Grid>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useDrawer = (): {\n  openDrawer: () => void;\n  closeDrawer: () => void;\n  isOpen: boolean;\n} => {\n  const [isOpen, setIsOpen] = useState(false);\n  const openDrawer = () => {\n    setIsOpen(true);\n  };\n  const closeDrawer = () => {\n    setIsOpen(false);\n  };\n\n  return { openDrawer, closeDrawer, isOpen };\n};\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\ninterface ITitleProps {\n  children: string;\n}\n\nexport const PageTitle: React.FC<ITitleProps> = ({ children }) => {\n  return (\n    <Grid sx={{ mt: 2, mb: 2 }} container justifyContent=\"center\">\n      <Typography variant=\"h4\">{children}</Typography>\n    </Grid>\n  );\n};\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosRequestConfig,\n  AxiosRequestHeaders,\n  AxiosResponse,\n} from \"axios\";\nimport { CATS_API_KEY } from \"../config\";\n\nconst headers: AxiosRequestHeaders = {\n  \"x-api-key\": CATS_API_KEY,\n};\nconst baseURL = \"https://api.thecatapi.com/v1\";\n\nclass Http {\n  private instance: AxiosInstance | null = null;\n  private headers: AxiosRequestHeaders;\n  private baseUrl: string;\n\n  private get http(): AxiosInstance {\n    return this.instance != null ? this.instance : this.initHttp();\n  }\n\n  constructor(headers: AxiosRequestHeaders, baseUrl: string) {\n    this.headers = headers;\n    this.baseUrl = baseUrl;\n  }\n\n  initHttp() {\n    const http = axios.create({\n      baseURL: this.baseUrl,\n      headers: this.headers,\n    });\n\n    http.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        const { response } = error;\n        return this.handleError(response);\n      }\n    );\n\n    this.instance = http;\n    return http;\n  }\n\n  request<T = any, R = AxiosResponse<T>>(\n    config: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.request(config);\n  }\n\n  get<T = any, R = AxiosResponse<T>>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.get<T, R>(url, config);\n  }\n\n  post<T = any, R = AxiosResponse<T>>(\n    url: string,\n    data?: T,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.post<T, R>(url, data, config);\n  }\n\n  put<T = any, R = AxiosResponse<T>>(\n    url: string,\n    data?: T,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.put<T, R>(url, data, config);\n  }\n\n  delete<T = any, R = AxiosResponse<T>>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return this.http.delete<T, R>(url, config);\n  }\n\n  private handleError(error: AxiosError) {\n    return Promise.reject(error);\n  }\n}\n\nexport const http = new Http(headers, baseURL);\n","export const AUTH0_DOMAIN = process.env.REACT_APP_AUTH0_DOMAIN || 'invalid_domain'\nexport const AUTH0_CLIENT_ID = process.env.REACT_APP_AUTH0_CLIENT_ID || 'invalid_id'\nexport const CATS_API_KEY = process.env.REACT_APP_CATS_API_KEY || 'invalid_api_key'","import { types } from \"mobx-state-tree\";\n\nexport const RandomCat = types.model(\"RandomCat\", {\n  id: types.string,\n  url: types.string,\n  width: types.number,\n  height: types.number,\n});\n","export const GET_RANDOM_CAT = \"/images/search\";\n","import React from \"react\";\nimport { types, Instance } from \"mobx-state-tree\";\n\nimport { RandomCatStore } from \"pages/RandomCats/RandomCatStore\";\nconst store = types\n  .model({\n    randomCatStore: RandomCatStore,\n  })\n  .create({\n    randomCatStore: {},\n  });\nexport default store;\n\nexport const StoreContext = React.createContext({} as Instance<typeof store>);\n","import React from \"react\";\nimport { Button, ButtonProps, CircularProgress } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\ninterface IButtonWithProgressProps extends ButtonProps {\n  loading: boolean;\n}\n\nexport const ButtonWithProgress: React.FC<IButtonWithProgressProps> = ({\n  loading,\n  children,\n  disabled,\n  ...props\n}) => {\n  return (\n    <Button disabled={disabled || loading} {...props}>\n      {loading && (\n        <Box\n          width=\"100%\"\n          height=\"100%\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          position=\"absolute\"\n          display=\"flex\"\n        >\n          <CircularProgress color=\"inherit\" size={22} thickness={4} />\n        </Box>\n      )}\n      <Box sx={{ opacity: loading ? 0 : \"initial\" }}>{children}</Box>\n    </Button>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Grid, Card, CardMedia, CardActions, Tab, Tabs } from \"@mui/material\";\nimport { observer } from \"mobx-react\";\n\nimport { PageTitle } from \"common/components/PageTitle\";\nimport { useStore } from \"common/hooks/useStore\";\nimport { MIME_TYPES } from \"./RandomCatStore\";\nimport { ButtonWithProgress } from \"common/components/ButtonWithProgress\";\n\nexport const RandomCatsPage: React.FC = observer(() => {\n  const [loading, setLoading] = useState(false);\n  const [mimeTabValue, setMimeTabValue] = useState(MIME_TYPES.ALL);\n  const { randomCatStore } = useStore();\n  const getCat = useCallback(async () => {\n    setLoading(true);\n    await randomCatStore.getRandomCat(mimeTabValue);\n  }, [mimeTabValue, randomCatStore]);\n  useEffect(() => {\n    getCat();\n  }, [getCat]);\n\n  const handleMimeTabChange = (\n    e: React.SyntheticEvent,\n    newValue: MIME_TYPES\n  ) => {\n    setMimeTabValue(newValue);\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      sx={{ height: \"100%\" }}\n    >\n      <PageTitle>Random cat</PageTitle>\n      <Tabs sx={{ pb: 1 }} onChange={handleMimeTabChange} value={mimeTabValue}>\n        <Tab label=\"All\" value={MIME_TYPES.ALL} />\n        <Tab label=\"Static\" value={MIME_TYPES.STATIC} />\n        <Tab label=\"Animated\" value={MIME_TYPES.ANIMATED} />\n      </Tabs>\n      {randomCatStore.currentCat && (\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Card sx={{ borderRadius: 4 }}>\n            <CardMedia\n              component=\"img\"\n              height={350}\n              alt=\"random card\"\n              src={randomCatStore.currentCat.url}\n              sx={{ objectFit: \"contain\" }}\n              onLoad={() => setLoading(false)}\n            />\n            <CardActions sx={{ pt: 2, pb: 2 }}>\n              <Grid container justifyContent=\"center\">\n                <ButtonWithProgress\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  loading={loading}\n                  onClick={getCat}\n                >\n                  One more cat\n                </ButtonWithProgress>\n              </Grid>\n            </CardActions>\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n});\n","import { useContext } from \"react\";\nimport { StoreContext } from \"common/store\";\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n","import { MainTemplate } from \"common/components/MainTemplate\";\nimport { RandomCatsPage } from \"pages/RandomCats\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { RANDOM_CATS } from \"router/path\";\n\nexport const Router: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <MainTemplate>\n        <Routes>\n          <Route path={RANDOM_CATS} element={<RandomCatsPage />} />\n          <Route path=\"*\" element={<p>There's nothing here!</p>} />\n        </Routes>\n      </MainTemplate>\n    </BrowserRouter>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Router } from \"router\";\n\nfunction App() {\n  const { loginWithRedirect, isAuthenticated, isLoading } = useAuth0();\n\n  useEffect(() => {\n    if (isLoading) return;\n    if (!isAuthenticated) {\n      loginWithRedirect();\n    }\n  }, [isAuthenticated, isLoading, loginWithRedirect]);\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <div>loading...</div> : isAuthenticated && <Router />}\n    </div>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@mui/material/styles\";\n\nexport const muiTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport App from \"./App\";\nimport { AUTH0_CLIENT_ID, AUTH0_DOMAIN } from \"config\";\nimport store, { StoreContext } from \"common/store\";\nimport { muiTheme } from \"theme/muiTheme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={AUTH0_DOMAIN}\n      clientId={AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n      <StoreContext.Provider value={store}>\n        <ThemeProvider theme={muiTheme}>\n          <CssBaseline enableColorScheme />\n          <App />\n        </ThemeProvider>\n      </StoreContext.Provider>\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}